# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import faiss_pb2 as proto_dot_faiss__pb2


class FaissServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.initFaiss = channel.unary_unary(
        '/faiss.FaissService/initFaiss',
        request_serializer=proto_dot_faiss__pb2.initFaissRequest.SerializeToString,
        response_deserializer=proto_dot_faiss__pb2.initFaissResponse.FromString,
        )
    self.addVectors = channel.unary_unary(
        '/faiss.FaissService/addVectors',
        request_serializer=proto_dot_faiss__pb2.addVecRequest.SerializeToString,
        response_deserializer=proto_dot_faiss__pb2.addVecResponse.FromString,
        )
    self.deleteVectors = channel.unary_unary(
        '/faiss.FaissService/deleteVectors',
        request_serializer=proto_dot_faiss__pb2.deleteVecRequest.SerializeToString,
        response_deserializer=proto_dot_faiss__pb2.deleteVecResponse.FromString,
        )
    self.getNearest = channel.unary_unary(
        '/faiss.FaissService/getNearest',
        request_serializer=proto_dot_faiss__pb2.getNearestRequest.SerializeToString,
        response_deserializer=proto_dot_faiss__pb2.getNearestResponse.FromString,
        )


class FaissServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def initFaiss(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def addVectors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteVectors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getNearest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FaissServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'initFaiss': grpc.unary_unary_rpc_method_handler(
          servicer.initFaiss,
          request_deserializer=proto_dot_faiss__pb2.initFaissRequest.FromString,
          response_serializer=proto_dot_faiss__pb2.initFaissResponse.SerializeToString,
      ),
      'addVectors': grpc.unary_unary_rpc_method_handler(
          servicer.addVectors,
          request_deserializer=proto_dot_faiss__pb2.addVecRequest.FromString,
          response_serializer=proto_dot_faiss__pb2.addVecResponse.SerializeToString,
      ),
      'deleteVectors': grpc.unary_unary_rpc_method_handler(
          servicer.deleteVectors,
          request_deserializer=proto_dot_faiss__pb2.deleteVecRequest.FromString,
          response_serializer=proto_dot_faiss__pb2.deleteVecResponse.SerializeToString,
      ),
      'getNearest': grpc.unary_unary_rpc_method_handler(
          servicer.getNearest,
          request_deserializer=proto_dot_faiss__pb2.getNearestRequest.FromString,
          response_serializer=proto_dot_faiss__pb2.getNearestResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'faiss.FaissService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
